<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ConversionProgram">

    <!-- Hoverless button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- System icon button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="10" />
    </Style>

    <!--Window control button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource VeryDarkGrayBrush}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" Foreground="WhiteSmoke" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SlightlyPurpleBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Window close button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource GroupboxBackgroundLightGrayBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Top ToolBar Button Style-->
    <Style x:Key="TopToolBarButton" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10 3 10 3 " />
        <Setter Property="Margin" Value="2 3 2 2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="2"
                            Background="Transparent"
                            Padding="3 0 3 1 "
                            Margin="3 0 3 0">

                        <TextBlock Foreground="White" Text="{TemplateBinding Content}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource SlightlyPurple}" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <!--<DoubleAnimation From="12" To="25" Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="FontSize" />-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Ordinary button style -->
    <Style x:Key="OrdinaryButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <!-- Border of button -->
                    <Border x:Name="border"
                            BorderBrush="Black"
                            BorderThickness="1"
                            Background="{StaticResource DefaultGrayBrush}"
                            Padding="1"
                            Margin="3 0 3 0"
                            SnapsToDevicePixels="True">
                        <!-- Text in button -->
                        <TextBlock Foreground="Black" Text="{TemplateBinding Content}" TextAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <!-- Change background color upon mouse enter-->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#c8c8f4" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Change to the default background color upon mouse leave -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource DefaultGray}" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Ordinary button style 100 width-->
    <Style x:Key="OrdinaryConverterButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="3" />

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <!-- Border of button -->
                    <Border x:Name="border"
                            BorderBrush="WhiteSmoke"
                            BorderThickness="1"
                            Background="Transparent"
                            Padding="1"
                            Width="100"
                            SnapsToDevicePixels="True">
                        <!-- Text in button -->
                        <TextBlock x:Name="TextInButton"  Foreground="White" Text="{TemplateBinding Content}" TextAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <!-- Change background color upon mouse enter-->
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource SlightlyPurple}" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="Black" Duration="0:0:0.1" Storyboard.TargetName="TextInButton" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- Change to the default background color upon mouse leave -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="White" Duration="0:0:0.1" Storyboard.TargetName="TextInButton" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>